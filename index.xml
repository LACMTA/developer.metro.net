<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metro Developer</title>
    <link>/</link>
    <description>Recent content on Metro Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>d&#43;air: data artist in residence</title>
      <link>/implement/digital-art-residency/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/implement/digital-art-residency/</guid>
      <description>Introduction Each piece can be placed on a continuum, with art on one end and data visualization on the other, and ranging between adjectives: ambiguous/concrete, personal/public, intuitive/objective, informational/emotional. No matter where the maps fall, their creators are communicating underlying verities—whether evidence-based truths or more pliant, relative “truths”—about life in an endlessly fascinating and dynamic metropolis.
http://lab.culturalanalytics.info/2017/09/on-broadway-on-view-in-exhibition-you.html
Data Artist-in-Residence Vision Metro posits that artists are well-positioned to synthesize diverse facts, goals, data and references, reveal new frames, connections and meaning and speak across “languages” as it applies to problem-solving, knowledge creation, and enhancing the user experience for Metro.</description>
    </item>
    
    <item>
      <title>GIS</title>
      <link>/learn/gis/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/learn/gis/</guid>
      <description>Metro Bus Line Shapefiles The Metro Bus Line Zip File contains 5 shapefiles that cover all Metro Bus Lines. A shapefile is a set of 3 to 7 interrelated files that can be used with mapping (GIS) software. These technical files that have no other application; you must have GIS software to use them. The shapefiles are redrawn every six months, typically in June and December. We’ll try to post them within six weeks of changes.</description>
    </item>
    
    <item>
      <title>Legal</title>
      <link>/learn/legal/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/learn/legal/</guid>
      <description>Terms and Conditions Thank you for registering to receive Metro’s (“Metro’s”) Developer website services (the “Services” as further defined below). Use of the Services is governed by these Terms and Conditions and the Web Services Developer Guidelines.
By using the Services you (“You” or where applicable “Your”) agree to be bound by these Terms and Conditions and the Web Services Developer Guidelines that are hereby incorporated.
Metro may at any time revise these Terms and Conditions without notice.</description>
    </item>
    
    <item>
      <title>Metrics &amp; Analytics</title>
      <link>/learn/metrics/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/learn/metrics/</guid>
      <description> Metrics &amp;amp; Analytics </description>
    </item>
    
    <item>
      <title>Metro Web Services</title>
      <link>/learn/services/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/learn/services/</guid>
      <description> Trip Planning, Vehicle Arrivals, and Service Alerts are blends of public Application Programming Interfaces (APIs). This section documents the services which together comprise the Metro Platform. </description>
    </item>
    
    <item>
      <title>Real-time Arrivals</title>
      <link>/learn/realtime/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/learn/realtime/</guid>
      <description>Metro Nextrip API Metro’s Realtime Application Programming Interface (API) lives at http://api.metro.net/. It gives you access to the positions of Metro vehicles on their routes in real time.
The Realtime API is a RESTful web service designed to serve bus location data gathered by our Advanced Transportation Management System (ATMS) and the new Nextrip prediction engine. This is the result of years of difficult work refining the information we collect from the GPS trackers on every bus.</description>
    </item>
    
    <item>
      <title>Schedules</title>
      <link>/learn/schedules/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/learn/schedules/</guid>
      <description> Schedules </description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/implement/privacy-statement/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/implement/privacy-statement/</guid>
      <description>The Los Angeles County Metropolitan Transportation Authority (Metro) respects your privacy. The following describes our Privacy Policy in relation to the information you submit via Metro’s WordPress websites such as:  The Source: Transportation News &amp;amp; Views website address is: http://thesource.metro.net/ El Pasajero: Tu ruta directa a novedades de transporte website address is: http://elpasajero.metro.net/ Metro Annual Report website address is: http://annualreport.metro.net/ Measure M: Metro’s Plan to Transform Transportation website address is: http://theplan.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/implement/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/implement/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/implement/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/implement/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;

&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/implement/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/implement/migrate-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>